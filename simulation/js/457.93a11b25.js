"use strict";(self["webpackChunkexp_1"]=self["webpackChunkexp_1"]||[]).push([[457],{6487:function(e,n,t){t.r(n),t.d(n,{default:function(){return h}});var s=t(3396),o=t.p+"media/e1s2.615d96b4.mp4";const i=(0,s.uE)('<header style="padding:20px;display:flex;flex-direction:row;align-items:center;justify-content:space-between;"><div><h1>Identify Noun Phrases</h1><p>The video below gives us an illustration of the scenario we will work on now.</p></div></header><main class="flex-row"><div class="codebox"><video height="400" autoplay="autoplay" controls><source src="'+o+'" type="video/mp4"> Your browser does not support the video tag. </video></div><div class="content"><h2>Nouns in the scenario</h2><p>From the previous scenario let us now find the nouns from the sentences that describe the scene. Nouns can be considered as classes in Object Oriented Programming. </p></div></main>',2),r={id:"buttons",class:"relative"};function a(e,n,t,o,a,c){return(0,s.wg)(),(0,s.iD)(s.HY,null,[i,(0,s._)("footer",null,[(0,s._)("div",r,[(0,s._)("button",{class:"navitem",onClick:n[0]||(n[0]=e=>c.nextClick())},"Next")])])],64)}t(7658);var c=t(8647),d={data(){return{}},methods:{nextClick(){c.Z.push("/screen-two-new-new")}}},l=t(89);const u=(0,l.Z)(d,[["render",a]]);var h=u}}]);
//# sourceMappingURL=457.93a11b25.js.map